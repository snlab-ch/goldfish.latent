% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/randomEffects-actor.R
\name{ComputeLogLikelihood}
\alias{ComputeLogLikelihood}
\title{Compute log-likelihood using MCMC samples}
\usage{
ComputeLogLikelihood(
  cmdstanrSamples,
  dataStan,
  type = c("marginal", "conditional"),
  nNodes = ifelse(type == "marginal", 11L, NULL),
  splitSize = NULL,
  spec = parallel::detectCores() - 1,
  ...
)
}
\arguments{
\item{cmdstanrSamples}{a \code{draws_array} or a \code{CmdStanFit} object with MCMC
samples from the posterior distribution. In the case of a \code{draws_array}
object is expected to have three dimensions corresponding to iterations,
chain and variables.}

\item{dataStan}{a \code{list} output of a \code{\link[=CreateData]{CreateData()}} call.}

\item{type}{a \code{character} value. It indicates whether the log-likelihood
computation should return the \code{"conditional"} or the \code{"marginal"} version.}

\item{nNodes}{an \code{integer}. The number of quadrature point to use in the
Gauss-Hermite quadrature approximation use to integrate out the
random-effects.}

\item{splitSize}{an \code{integer} or \code{NULL}. It is use when the \code{type} is
\code{"conditional"}. When it is \code{NULL}, the \code{splitSize} is set to have
roughly \code{4e4} rows sent to a processor when
the matrix \code{X}, containing the change statistics, has more
than \code{1e6}rows. If \code{X} has less than \code{1e6} rows, the \code{splitSize} is set
in such way that every processor would have the same amount of rows to
process.
The default value is \code{NULL}.}

\item{spec}{A specification appropriate to the type of cluster, see
\code{\link[parallel:makeCluster]{parallel::makeCluster()}} for a detail description. In the simplest case,
an integer defining the number of processors to use during the parallel
computation.}

\item{...}{Additional arguments and options to be passed to the
\code{\link[parallel:makeCluster]{parallel::makeCluster()}} call.}
}
\value{
An array with the log-likelihood for each event when
\code{type = "conditional"} or the log-likelihood for each sender actor after
the random effects are integrated out when \code{type = "marginal"}.
}
\description{
The function computes the log-likelihood for each MCMC sample from the
posterior distribution.
}
\details{
Argument \code{type} allows to compute the conditional or marginal version of the
log-likelihood. The marginal version uses a Gauss-Hermite quadrature
approximation to integrate out the random effects
\insertCite{Merkle2019}{Rdpack}. The code is an adaptation from
the supplementary material of \insertCite{Merkle2019;textual}{Rdpack}.
}
\examples{
\donttest{
library(goldfish)
library(cmdstanr)
data("Social_Evolution")
callNetwork <- defineNetwork(nodes = actors, directed = TRUE) |>
  linkEvents(changeEvent = calls, nodes = actors)
callsDependent <- defineDependentEvents(
  events = calls, nodes = actors, defaultNetwork = callNetwork
)
data2stan <- CreateDataModel(
  randomEffects = list(inertia ~ 1),
  fixedEffects = callsDependent ~ recip + trans
)

stanCode <- CreateModelCode(data2stan)

mod01 <- cmdstan_model(stanCode)
mod01Samples <- mod01$sample(
  data = data2stan[["dataStan"]],
  parallel_chains = 4, chains = 4,  iter_warmup = 500, iter_sampling = 500,
  show_messages = FALSE
)

margLogLikMod01 <- ComputeLogLikelihood(mod01Samples, data2stan, spec = 4)
condLogLikMod01 <- ComputeLogLikelihood(mod01Samples, data2stan,
                                        type = "conditional", spec = 4)
}
}
\references{
\insertRef{Merkle2019}{goldfish.latent}
}
